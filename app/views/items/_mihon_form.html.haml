.TSform_main_contents_sell_form_up_dropbox
  .TSform_main_contents_sell_form_up_dropbox_box  
    .TSform_main_contents_sell_form_up_dropbox_box_items
      .TSform_main_contents_sell_form_up_dropbox_box_items_item
        %ul  
          %input.TSform_main_contents_sell_form_up_dropbox_box_items_item_file
            #image-box
              #previews
              = f.fields_for :images do |i|   imageモデルの入力フォームを作成、編集時なら保存されているimage分だけボタン作成する
                .js-file_group{"data-index" => "#{i.index}"}　　カスタムデータにインデックスを付与したボックス作成
                  = i.file_field :url, class: 'js-file'　　ファイル選択ボタン作成
                  %span.js-remove 削除　　　　　削除ボタン作成



                  - if @item.persisted?    もし＠itemが存在するなら＝編集時
                    - @item.images.each_with_index do |image, i|　　すでに保存されているimageにインデックスをつける
                      = image_tag "#{image.url}", data: {index: i}, width: "100", height: '100'　　previewsにimageを表示する



                - if @item.persisted?　　　編集時なら
                  = i.check_box :_destroy, data:{ index: i.index }, class: 'hidden-destroy'　削除ボタン用のチェックボックスを作成（見えない）
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　すでにaccepts_nested_attributes_forを使用して画像を保存しているのでこれが必要
              - if @item.persisted?　　　　編集時なら
                .js-file_group{"data-index" => "#{@item.images.count}"}　　　新たにファイル選択ボタンを作成する。
                  = file_field_tag :url, name: "item[images_attributes][#{@item.images.count}][url]", class: 'js-file'
                  .js-remove 削除